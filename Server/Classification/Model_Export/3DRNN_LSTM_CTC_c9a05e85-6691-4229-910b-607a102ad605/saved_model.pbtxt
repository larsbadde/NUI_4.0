saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "All"
        input_arg {
          name: "input"
          type: DT_BOOL
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type: DT_BOOL
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ApplyMomentum"
        input_arg {
          name: "var"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "accum"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "lr"
          type_attr: "T"
        }
        input_arg {
          name: "grad"
          type_attr: "T"
        }
        input_arg {
          name: "momentum"
          type_attr: "T"
        }
        output_arg {
          name: "out"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "use_nesterov"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ArgMax"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dimension"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "output_type"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "output_type"
          type: "type"
          default_value {
            type: DT_INT64
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Assert"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "data"
          type_list_attr: "T"
        }
        attr {
          name: "T"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "summarize"
          type: "int"
          default_value {
            i: 3
          }
        }
        is_stateful: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BiasAddGrad"
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "CTCGreedyDecoder"
        input_arg {
          name: "inputs"
          type: DT_FLOAT
        }
        input_arg {
          name: "sequence_length"
          type: DT_INT32
        }
        output_arg {
          name: "decoded_indices"
          type: DT_INT64
        }
        output_arg {
          name: "decoded_values"
          type: DT_INT64
        }
        output_arg {
          name: "decoded_shape"
          type: DT_INT64
        }
        output_arg {
          name: "log_probability"
          type: DT_FLOAT
        }
        attr {
          name: "merge_repeated"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "CTCLoss"
        input_arg {
          name: "inputs"
          type: DT_FLOAT
        }
        input_arg {
          name: "labels_indices"
          type: DT_INT64
        }
        input_arg {
          name: "labels_values"
          type: DT_INT32
        }
        input_arg {
          name: "sequence_length"
          type: DT_INT32
        }
        output_arg {
          name: "loss"
          type: DT_FLOAT
        }
        output_arg {
          name: "gradient"
          type: DT_FLOAT
        }
        attr {
          name: "preprocess_collapse_repeated"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "ctc_merge_repeated"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "ignore_longer_outputs_than_inputs"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "ControlTrigger"
      }
      op {
        name: "EditDistance"
        input_arg {
          name: "hypothesis_indices"
          type: DT_INT64
        }
        input_arg {
          name: "hypothesis_values"
          type_attr: "T"
        }
        input_arg {
          name: "hypothesis_shape"
          type: DT_INT64
        }
        input_arg {
          name: "truth_indices"
          type: DT_INT64
        }
        input_arg {
          name: "truth_values"
          type_attr: "T"
        }
        input_arg {
          name: "truth_shape"
          type: DT_INT64
        }
        output_arg {
          name: "output"
          type: DT_FLOAT
        }
        attr {
          name: "normalize"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Enter"
        input_arg {
          name: "data"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "frame_name"
          type: "string"
        }
        attr {
          name: "is_constant"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "parallel_iterations"
          type: "int"
          default_value {
            i: 10
          }
        }
      }
      op {
        name: "Equal"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_QUINT8
              type: DT_QINT8
              type: DT_QINT32
              type: DT_STRING
              type: DT_BOOL
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Exit"
        input_arg {
          name: "data"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "InvertPermutation"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Less"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "LoopCond"
        input_arg {
          name: "input"
          type: DT_BOOL
        }
        output_arg {
          name: "output"
          type: DT_BOOL
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Max"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Merge"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        output_arg {
          name: "value_index"
          type: DT_INT32
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Min"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "NextIteration"
        input_arg {
          name: "data"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PreventGradient"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "message"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Rank"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type: DT_INT32
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "RefEnter"
        input_arg {
          name: "data"
          type_attr: "T"
          is_ref: true
        }
        output_arg {
          name: "output"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "frame_name"
          type: "string"
        }
        attr {
          name: "is_constant"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "parallel_iterations"
          type: "int"
          default_value {
            i: 10
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Sigmoid"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "SigmoidGrad"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Stack"
        output_arg {
          name: "handle"
          type: DT_STRING
          is_ref: true
        }
        attr {
          name: "elem_type"
          type: "type"
        }
        attr {
          name: "stack_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
      op {
        name: "StackPop"
        input_arg {
          name: "handle"
          type: DT_STRING
          is_ref: true
        }
        output_arg {
          name: "elem"
          type_attr: "elem_type"
        }
        attr {
          name: "elem_type"
          type: "type"
        }
      }
      op {
        name: "StackPush"
        input_arg {
          name: "handle"
          type: DT_STRING
          is_ref: true
        }
        input_arg {
          name: "elem"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "swap_memory"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Switch"
        input_arg {
          name: "data"
          type_attr: "T"
        }
        input_arg {
          name: "pred"
          type: DT_BOOL
        }
        output_arg {
          name: "output_false"
          type_attr: "T"
        }
        output_arg {
          name: "output_true"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TanhGrad"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TensorArrayGatherV3"
        input_arg {
          name: "handle"
          type: DT_RESOURCE
        }
        input_arg {
          name: "indices"
          type: DT_INT32
        }
        input_arg {
          name: "flow_in"
          type: DT_FLOAT
        }
        output_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "element_shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "TensorArrayGradV3"
        input_arg {
          name: "handle"
          type: DT_RESOURCE
        }
        input_arg {
          name: "flow_in"
          type: DT_FLOAT
        }
        output_arg {
          name: "grad_handle"
          type: DT_RESOURCE
        }
        output_arg {
          name: "flow_out"
          type: DT_FLOAT
        }
        attr {
          name: "source"
          type: "string"
        }
        is_stateful: true
      }
      op {
        name: "TensorArrayReadV3"
        input_arg {
          name: "handle"
          type: DT_RESOURCE
        }
        input_arg {
          name: "index"
          type: DT_INT32
        }
        input_arg {
          name: "flow_in"
          type: DT_FLOAT
        }
        output_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "TensorArrayScatterV3"
        input_arg {
          name: "handle"
          type: DT_RESOURCE
        }
        input_arg {
          name: "indices"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "flow_in"
          type: DT_FLOAT
        }
        output_arg {
          name: "flow_out"
          type: DT_FLOAT
        }
        attr {
          name: "T"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "TensorArraySizeV3"
        input_arg {
          name: "handle"
          type: DT_RESOURCE
        }
        input_arg {
          name: "flow_in"
          type: DT_FLOAT
        }
        output_arg {
          name: "size"
          type: DT_INT32
        }
        is_stateful: true
      }
      op {
        name: "TensorArrayV3"
        input_arg {
          name: "size"
          type: DT_INT32
        }
        output_arg {
          name: "handle"
          type: DT_RESOURCE
        }
        output_arg {
          name: "flow"
          type: DT_FLOAT
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "element_shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
        attr {
          name: "dynamic_size"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "clear_after_read"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "tensor_array_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
      op {
        name: "TensorArrayWriteV3"
        input_arg {
          name: "handle"
          type: DT_RESOURCE
        }
        input_arg {
          name: "index"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "flow_in"
          type: DT_FLOAT
        }
        output_arg {
          name: "flow_out"
          type: DT_FLOAT
        }
        attr {
          name: "T"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Transpose"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "perm"
          type_attr: "Tperm"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tperm"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "TruncatedNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
      op {
        name: "ZerosLike"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
    }
    tags: "serve"
    tensorflow_version: "1.3.0"
    tensorflow_git_version: "b\'unknown\'"
  }
  graph_def {
    node {
      name: "Variable/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Variable"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "Variable/Assign"
      op: "Assign"
      input: "Variable"
      input: "Variable/initial_value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Variable/read"
      op: "Identity"
      input: "Variable"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_x"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 41
            }
          }
        }
      }
    }
    node {
      name: "Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "Placeholder_3"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "Shape"
      op: "Shape"
      input: "input_x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice"
      op: "StridedSlice"
      input: "Shape"
      input: "strided_slice/stack"
      input: "strided_slice/stack_1"
      input: "strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "Shape"
      input: "strided_slice_1/stack"
      input: "strided_slice_1/stack_1"
      input: "strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "range"
      op: "Range"
      input: "range/start"
      input: "Rank"
      input: "range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/values_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "concat/values_0"
      input: "range"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "transpose"
      op: "Transpose"
      input: "input_x"
      input: "concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 41
              }
            }
          }
        }
      }
    }
    node {
      name: "sequence_length"
      op: "Identity"
      input: "Placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/Shape"
      op: "Shape"
      input: "transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "rnn/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "rnn/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/strided_slice"
      op: "StridedSlice"
      input: "rnn/Shape"
      input: "rnn/strided_slice/stack"
      input: "rnn/strided_slice/stack_1"
      input: "rnn/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/concat"
      op: "ConcatV2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/Const"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_1"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/zeros"
      op: "Fill"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/concat"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/concat_1/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/concat_1"
      op: "ConcatV2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/Const_2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_3/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_3"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/ExpandDims_3/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1"
      op: "Fill"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/concat_1"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/concat"
      op: "ConcatV2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/Const"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_1"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros"
      op: "Fill"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/concat"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1"
      op: "ConcatV2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_3/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_3"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/ExpandDims_3/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1"
      op: "Fill"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/concat_1"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/concat"
      op: "ConcatV2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/Const"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_1"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/zeros"
      op: "Fill"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/concat"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_2/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_2"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_2/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/concat_1/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/concat_1"
      op: "ConcatV2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/Const_2"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_3/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_3"
      op: "ExpandDims"
      input: "rnn/strided_slice"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/ExpandDims_3/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/zeros_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/zeros_1"
      op: "Fill"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/concat_1"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/zeros_1/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/Shape_1"
      op: "Shape"
      input: "sequence_length"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "rnn/stack"
      op: "Pack"
      input: "rnn/strided_slice"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/Equal"
      op: "Equal"
      input: "rnn/Shape_1"
      input: "rnn/stack"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/All"
      op: "All"
      input: "rnn/Equal"
      input: "rnn/Const"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "rnn/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Expected shape for Tensor sequence_length:0 is "
          }
        }
      }
    }
    node {
      name: "rnn/Assert/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: " but saw shape: "
          }
        }
      }
    }
    node {
      name: "rnn/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Expected shape for Tensor sequence_length:0 is "
          }
        }
      }
    }
    node {
      name: "rnn/Assert/Assert/data_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: " but saw shape: "
          }
        }
      }
    }
    node {
      name: "rnn/Assert/Assert"
      op: "Assert"
      input: "rnn/All"
      input: "rnn/Assert/Assert/data_0"
      input: "rnn/stack"
      input: "rnn/Assert/Assert/data_2"
      input: "rnn/Shape_1"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_INT32
            type: DT_STRING
            type: DT_INT32
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "rnn/CheckSeqLen"
      op: "Identity"
      input: "sequence_length"
      input: "^rnn/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/Shape_2"
      op: "Shape"
      input: "transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "rnn/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/strided_slice_1"
      op: "StridedSlice"
      input: "rnn/Shape_2"
      input: "rnn/strided_slice_1/stack"
      input: "rnn/strided_slice_1/stack_1"
      input: "rnn/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "rnn/Shape_3"
      op: "Shape"
      input: "transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "rnn/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "rnn/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/strided_slice_2"
      op: "StridedSlice"
      input: "rnn/Shape_3"
      input: "rnn/strided_slice_2/stack"
      input: "rnn/strided_slice_2/stack_1"
      input: "rnn/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "rnn/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/ExpandDims"
      op: "ExpandDims"
      input: "rnn/strided_slice_2"
      input: "rnn/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/concat"
      op: "ConcatV2"
      input: "rnn/ExpandDims"
      input: "rnn/Const_1"
      input: "rnn/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/zeros"
      op: "Fill"
      input: "rnn/concat"
      input: "rnn/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/Min"
      op: "Min"
      input: "rnn/CheckSeqLen"
      input: "rnn/Const_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "rnn/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/Max"
      op: "Max"
      input: "rnn/CheckSeqLen"
      input: "rnn/Const_3"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "rnn/time"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/TensorArray"
      op: "TensorArrayV3"
      input: "rnn/strided_slice_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "clear_after_read"
        value {
          b: true
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "dynamic_size"
        value {
          b: false
        }
      }
      attr {
        key: "element_shape"
        value {
          shape {
            unknown_rank: true
          }
        }
      }
      attr {
        key: "tensor_array_name"
        value {
          s: "rnn/dynamic_rnn/output_0"
        }
      }
    }
    node {
      name: "rnn/TensorArray_1"
      op: "TensorArrayV3"
      input: "rnn/strided_slice_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "clear_after_read"
        value {
          b: true
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "dynamic_size"
        value {
          b: false
        }
      }
      attr {
        key: "element_shape"
        value {
          shape {
            unknown_rank: true
          }
        }
      }
      attr {
        key: "tensor_array_name"
        value {
          s: "rnn/dynamic_rnn/input_0"
        }
      }
    }
    node {
      name: "rnn/TensorArrayUnstack/Shape"
      op: "Shape"
      input: "transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "rnn/TensorArrayUnstack/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayUnstack/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayUnstack/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayUnstack/strided_slice"
      op: "StridedSlice"
      input: "rnn/TensorArrayUnstack/Shape"
      input: "rnn/TensorArrayUnstack/strided_slice/stack"
      input: "rnn/TensorArrayUnstack/strided_slice/stack_1"
      input: "rnn/TensorArrayUnstack/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "rnn/TensorArrayUnstack/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayUnstack/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayUnstack/range"
      op: "Range"
      input: "rnn/TensorArrayUnstack/range/start"
      input: "rnn/TensorArrayUnstack/strided_slice"
      input: "rnn/TensorArrayUnstack/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
      op: "TensorArrayScatterV3"
      input: "rnn/TensorArray_1"
      input: "rnn/TensorArrayUnstack/range"
      input: "transpose"
      input: "rnn/TensorArray_1:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@transpose"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Enter"
      op: "Enter"
      input: "rnn/time"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Enter_1"
      op: "Enter"
      input: "rnn/TensorArray:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Enter_2"
      op: "Enter"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Enter_3"
      op: "Enter"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState/zeros_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Enter_4"
      op: "Enter"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Enter_5"
      op: "Enter"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_1/zeros_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Enter_6"
      op: "Enter"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Enter_7"
      op: "Enter"
      input: "rnn/MultiRNNCellZeroState/LSTMCellZeroState_2/zeros_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Merge"
      op: "Merge"
      input: "rnn/while/Enter"
      input: "rnn/while/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Merge_1"
      op: "Merge"
      input: "rnn/while/Enter_1"
      input: "rnn/while/NextIteration_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Merge_2"
      op: "Merge"
      input: "rnn/while/Enter_2"
      input: "rnn/while/NextIteration_2"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Merge_3"
      op: "Merge"
      input: "rnn/while/Enter_3"
      input: "rnn/while/NextIteration_3"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Merge_4"
      op: "Merge"
      input: "rnn/while/Enter_4"
      input: "rnn/while/NextIteration_4"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Merge_5"
      op: "Merge"
      input: "rnn/while/Enter_5"
      input: "rnn/while/NextIteration_5"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Merge_6"
      op: "Merge"
      input: "rnn/while/Enter_6"
      input: "rnn/while/NextIteration_6"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Merge_7"
      op: "Merge"
      input: "rnn/while/Enter_7"
      input: "rnn/while/NextIteration_7"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Less/Enter"
      op: "Enter"
      input: "rnn/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Less"
      op: "Less"
      input: "rnn/while/Merge"
      input: "rnn/while/Less/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/LoopCond"
      op: "LoopCond"
      input: "rnn/while/Less"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Switch"
      op: "Switch"
      input: "rnn/while/Merge"
      input: "rnn/while/LoopCond"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Merge"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Switch_1"
      op: "Switch"
      input: "rnn/while/Merge_1"
      input: "rnn/while/LoopCond"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Merge_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Switch_2"
      op: "Switch"
      input: "rnn/while/Merge_2"
      input: "rnn/while/LoopCond"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Merge_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Switch_3"
      op: "Switch"
      input: "rnn/while/Merge_3"
      input: "rnn/while/LoopCond"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Merge_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Switch_4"
      op: "Switch"
      input: "rnn/while/Merge_4"
      input: "rnn/while/LoopCond"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Merge_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Switch_5"
      op: "Switch"
      input: "rnn/while/Merge_5"
      input: "rnn/while/LoopCond"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Merge_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Switch_6"
      op: "Switch"
      input: "rnn/while/Merge_6"
      input: "rnn/while/LoopCond"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Merge_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Switch_7"
      op: "Switch"
      input: "rnn/while/Merge_7"
      input: "rnn/while/LoopCond"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Merge_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Identity"
      op: "Identity"
      input: "rnn/while/Switch:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Identity_1"
      op: "Identity"
      input: "rnn/while/Switch_1:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Identity_2"
      op: "Identity"
      input: "rnn/while/Switch_2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Identity_3"
      op: "Identity"
      input: "rnn/while/Switch_3:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Identity_4"
      op: "Identity"
      input: "rnn/while/Switch_4:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Identity_5"
      op: "Identity"
      input: "rnn/while/Switch_5:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Identity_6"
      op: "Identity"
      input: "rnn/while/Switch_6:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Identity_7"
      op: "Identity"
      input: "rnn/while/Switch_7:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/TensorArrayReadV3/Enter"
      op: "Enter"
      input: "rnn/TensorArray_1"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/TensorArrayReadV3/Enter_1"
      op: "Enter"
      input: "rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/TensorArrayReadV3"
      op: "TensorArrayReadV3"
      input: "rnn/while/TensorArrayReadV3/Enter"
      input: "rnn/while/Identity"
      input: "rnn/while/TensorArrayReadV3/Enter_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\277\000\000\000X\002\000\000"
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.08709383010864258
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.08709383010864258
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 191
            }
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat/axis"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat"
      op: "ConcatV2"
      input: "rnn/while/TensorArrayReadV3"
      input: "rnn/while/Identity_3"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 191
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul"
      op: "MatMul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd"
      op: "BiasAdd"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Const"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split/split_dim"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split"
      op: "Split"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split/split_dim"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add/y"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split:2"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter"
      input: "rnn/while/Identity_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid"
      op: "Sigmoid"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid"
      input: "rnn/while/Identity_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter"
      input: "rnn/while/Identity_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1"
      op: "Sigmoid"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh"
      op: "Tanh"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split:3"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2"
      op: "Sigmoid"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1"
      op: "Tanh"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: ",\001\000\000X\002\000\000"
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.08164966106414795
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.08164966106414795
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 300
            }
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat/axis"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat"
      op: "ConcatV2"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
      input: "rnn/while/Identity_5"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul"
      op: "MatMul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd"
      op: "BiasAdd"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Const"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split/split_dim"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split"
      op: "Split"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split/split_dim"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add/y"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split:2"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter"
      input: "rnn/while/Identity_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid"
      op: "Sigmoid"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid"
      input: "rnn/while/Identity_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter"
      input: "rnn/while/Identity_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1"
      op: "Sigmoid"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh"
      op: "Tanh"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split:3"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2"
      op: "Sigmoid"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1"
      op: "Tanh"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: ",\001\000\000X\002\000\000"
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.08164966106414795
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.08164966106414795
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 300
            }
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat/axis"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat"
      op: "ConcatV2"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
      input: "rnn/while/Identity_7"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul"
      op: "MatMul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd"
      op: "BiasAdd"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Const"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split/split_dim"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split"
      op: "Split"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split/split_dim"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1414213627576828
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/sub"
      op: "Sub"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/max"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/mul"
      op: "Mul"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/RandomUniform"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform"
      op: "Add"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/mul"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add/y"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split:2"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter"
      input: "rnn/while/Identity_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid"
      op: "Sigmoid"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid"
      input: "rnn/while/Identity_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter"
      input: "rnn/while/Identity_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1"
      op: "Sigmoid"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh"
      op: "Tanh"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4"
      op: "Add"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split:3"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2"
      op: "Sigmoid"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1"
      op: "Tanh"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
      op: "Mul"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/GreaterEqual/Enter"
      op: "Enter"
      input: "rnn/CheckSeqLen"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/GreaterEqual"
      op: "GreaterEqual"
      input: "rnn/while/Identity"
      input: "rnn/while/GreaterEqual/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Select/Enter"
      op: "Enter"
      input: "rnn/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/Select"
      op: "Select"
      input: "rnn/while/GreaterEqual"
      input: "rnn/while/Select/Enter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/GreaterEqual_1"
      op: "GreaterEqual"
      input: "rnn/while/Identity"
      input: "rnn/while/GreaterEqual/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Select_1"
      op: "Select"
      input: "rnn/while/GreaterEqual_1"
      input: "rnn/while/Identity_2"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/GreaterEqual_2"
      op: "GreaterEqual"
      input: "rnn/while/Identity"
      input: "rnn/while/GreaterEqual/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Select_2"
      op: "Select"
      input: "rnn/while/GreaterEqual_2"
      input: "rnn/while/Identity_3"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/GreaterEqual_3"
      op: "GreaterEqual"
      input: "rnn/while/Identity"
      input: "rnn/while/GreaterEqual/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Select_3"
      op: "Select"
      input: "rnn/while/GreaterEqual_3"
      input: "rnn/while/Identity_4"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/GreaterEqual_4"
      op: "GreaterEqual"
      input: "rnn/while/Identity"
      input: "rnn/while/GreaterEqual/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Select_4"
      op: "Select"
      input: "rnn/while/GreaterEqual_4"
      input: "rnn/while/Identity_5"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/GreaterEqual_5"
      op: "GreaterEqual"
      input: "rnn/while/Identity"
      input: "rnn/while/GreaterEqual/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Select_5"
      op: "Select"
      input: "rnn/while/GreaterEqual_5"
      input: "rnn/while/Identity_6"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/GreaterEqual_6"
      op: "GreaterEqual"
      input: "rnn/while/Identity"
      input: "rnn/while/GreaterEqual/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Select_6"
      op: "Select"
      input: "rnn/while/GreaterEqual_6"
      input: "rnn/while/Identity_7"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
      op: "Enter"
      input: "rnn/TensorArray"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "rnn/while/TensorArrayWrite/TensorArrayWriteV3"
      op: "TensorArrayWriteV3"
      input: "rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
      input: "rnn/while/Identity"
      input: "rnn/while/Select"
      input: "rnn/while/Identity_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/add/y"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/while/add"
      op: "Add"
      input: "rnn/while/Identity"
      input: "rnn/while/add/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/NextIteration"
      op: "NextIteration"
      input: "rnn/while/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/NextIteration_1"
      op: "NextIteration"
      input: "rnn/while/TensorArrayWrite/TensorArrayWriteV3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/NextIteration_2"
      op: "NextIteration"
      input: "rnn/while/Select_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/NextIteration_3"
      op: "NextIteration"
      input: "rnn/while/Select_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/NextIteration_4"
      op: "NextIteration"
      input: "rnn/while/Select_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/NextIteration_5"
      op: "NextIteration"
      input: "rnn/while/Select_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/NextIteration_6"
      op: "NextIteration"
      input: "rnn/while/Select_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/NextIteration_7"
      op: "NextIteration"
      input: "rnn/while/Select_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Exit"
      op: "Exit"
      input: "rnn/while/Switch"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Exit_1"
      op: "Exit"
      input: "rnn/while/Switch_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Exit_2"
      op: "Exit"
      input: "rnn/while/Switch_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Exit_3"
      op: "Exit"
      input: "rnn/while/Switch_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Exit_4"
      op: "Exit"
      input: "rnn/while/Switch_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Exit_5"
      op: "Exit"
      input: "rnn/while/Switch_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Exit_6"
      op: "Exit"
      input: "rnn/while/Switch_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/while/Exit_7"
      op: "Exit"
      input: "rnn/while/Switch_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayStack/TensorArraySizeV3"
      op: "TensorArraySizeV3"
      input: "rnn/TensorArray"
      input: "rnn/while/Exit_1"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/TensorArray"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayStack/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/TensorArray"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayStack/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/TensorArray"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayStack/range"
      op: "Range"
      input: "rnn/TensorArrayStack/range/start"
      input: "rnn/TensorArrayStack/TensorArraySizeV3"
      input: "rnn/TensorArrayStack/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/TensorArray"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/TensorArrayStack/TensorArrayGatherV3"
      op: "TensorArrayGatherV3"
      input: "rnn/TensorArray"
      input: "rnn/TensorArrayStack/range"
      input: "rnn/while/Exit_1"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/TensorArray"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "element_shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 150
            }
          }
        }
      }
    }
    node {
      name: "rnn/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "rnn/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "rnn/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "rnn/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "rnn/range"
      op: "Range"
      input: "rnn/range/start"
      input: "rnn/Rank"
      input: "rnn/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/concat_1/values_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "rnn/concat_1/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "rnn/concat_1"
      op: "ConcatV2"
      input: "rnn/concat_1/values_0"
      input: "rnn/range"
      input: "rnn/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/transpose"
      op: "Transpose"
      input: "rnn/TensorArrayStack/TensorArrayGatherV3"
      input: "rnn/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\226\000\000\000"
          }
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "rnn/transpose"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "truncated_normal/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\226\000\000\000\014\000\000\000"
          }
        }
      }
    }
    node {
      name: "truncated_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.10000000149011612
          }
        }
      }
    }
    node {
      name: "truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "truncated_normal/mul"
      op: "Mul"
      input: "truncated_normal/TruncatedNormal"
      input: "truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "truncated_normal"
      op: "Add"
      input: "truncated_normal/mul"
      input: "truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "Variable_1"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
            dim {
              size: 12
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "Variable_1/Assign"
      op: "Assign"
      input: "Variable_1"
      input: "truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Variable_1/read"
      op: "Identity"
      input: "Variable_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 12
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Variable_2"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 12
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "Variable_2/Assign"
      op: "Assign"
      input: "Variable_2"
      input: "Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Variable_2/read"
      op: "Identity"
      input: "Variable_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "MatMul"
      op: "MatMul"
      input: "Reshape"
      input: "Variable_1/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "add"
      op: "Add"
      input: "MatMul"
      input: "Variable_2/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 12
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Pack"
      input: "strided_slice"
      input: "Reshape_1/shape/1"
      input: "Reshape_1/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "add"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "transpose_1/perm"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "transpose_1"
      op: "Transpose"
      input: "Reshape_1"
      input: "transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "CTCLoss"
      op: "CTCLoss"
      input: "transpose_1"
      input: "Placeholder_2"
      input: "Placeholder_1"
      input: "Placeholder_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "ctc_merge_repeated"
        value {
          b: false
        }
      }
      attr {
        key: "ignore_longer_outputs_than_inputs"
        value {
          b: false
        }
      }
      attr {
        key: "preprocess_collapse_repeated"
        value {
          b: true
        }
      }
    }
    node {
      name: "Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Mean"
      op: "Mean"
      input: "CTCLoss"
      input: "Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/f_count"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/f_count_1"
      op: "Enter"
      input: "gradients/f_count"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/Merge"
      op: "Merge"
      input: "gradients/f_count_1"
      input: "gradients/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Switch"
      op: "Switch"
      input: "gradients/Merge"
      input: "rnn/while/LoopCond"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Add/y"
      op: "Const"
      input: "^rnn/while/Identity"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/Add"
      op: "Add"
      input: "gradients/Switch:1"
      input: "gradients/Add/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/NextIteration"
      op: "NextIteration"
      input: "gradients/Add"
      input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
      input: "^gradients/rnn/while/Select_1_grad/zeros_like/StackPush"
      input: "^gradients/rnn/while/Select_1_grad/Select/StackPush"
      input: "^gradients/rnn/while/Select_2_grad/zeros_like/StackPush"
      input: "^gradients/rnn/while/Select_2_grad/Select/StackPush"
      input: "^gradients/rnn/while/Select_3_grad/zeros_like/StackPush"
      input: "^gradients/rnn/while/Select_3_grad/Select/StackPush"
      input: "^gradients/rnn/while/Select_4_grad/zeros_like/StackPush"
      input: "^gradients/rnn/while/Select_4_grad/Select/StackPush"
      input: "^gradients/rnn/while/Select_5_grad/zeros_like/StackPush"
      input: "^gradients/rnn/while/Select_5_grad/Select/StackPush"
      input: "^gradients/rnn/while/Select_6_grad/zeros_like/StackPush"
      input: "^gradients/rnn/while/Select_6_grad/Select/StackPush"
      input: "^gradients/rnn/while/Select_grad/Select/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPush"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPush"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/f_count_2"
      op: "Exit"
      input: "gradients/Switch"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/b_count"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/b_count_1"
      op: "Enter"
      input: "gradients/f_count_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/Merge_1"
      op: "Merge"
      input: "gradients/b_count_1"
      input: "gradients/NextIteration_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/GreaterEqual/Enter"
      op: "Enter"
      input: "gradients/b_count"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/GreaterEqual"
      op: "GreaterEqual"
      input: "gradients/Merge_1"
      input: "gradients/GreaterEqual/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/b_count_2"
      op: "LoopCond"
      input: "gradients/GreaterEqual"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Switch_1"
      op: "Switch"
      input: "gradients/Merge_1"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Sub"
      op: "Sub"
      input: "gradients/Switch_1:1"
      input: "gradients/GreaterEqual/Enter"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/NextIteration_1"
      op: "NextIteration"
      input: "gradients/Sub"
      input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/b_count_3"
      op: "Exit"
      input: "gradients/Switch_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Reshape"
      op: "Reshape"
      input: "gradients/Fill"
      input: "gradients/Mean_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Shape"
      op: "Shape"
      input: "CTCLoss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Tile"
      op: "Tile"
      input: "gradients/Mean_grad/Reshape"
      input: "gradients/Mean_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Shape_1"
      op: "Shape"
      input: "CTCLoss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Prod"
      op: "Prod"
      input: "gradients/Mean_grad/Shape_1"
      input: "gradients/Mean_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Prod_1"
      op: "Prod"
      input: "gradients/Mean_grad/Shape_2"
      input: "gradients/Mean_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Maximum"
      op: "Maximum"
      input: "gradients/Mean_grad/Prod_1"
      input: "gradients/Mean_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/Mean_grad/Prod"
      input: "gradients/Mean_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/Cast"
      op: "Cast"
      input: "gradients/Mean_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Mean_grad/truediv"
      op: "RealDiv"
      input: "gradients/Mean_grad/Tile"
      input: "gradients/Mean_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/zeros_like"
      op: "ZerosLike"
      input: "CTCLoss:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/CTCLoss_grad/PreventGradient"
      op: "PreventGradient"
      input: "CTCLoss:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "message"
        value {
          s: "Currently there is no way to take the second  derivative of ctc_loss due to the fused implementation\'s interaction  with tf.gradients()"
        }
      }
    }
    node {
      name: "gradients/CTCLoss_grad/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "gradients/CTCLoss_grad/ExpandDims"
      op: "ExpandDims"
      input: "gradients/Mean_grad/truediv"
      input: "gradients/CTCLoss_grad/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/CTCLoss_grad/mul"
      op: "Mul"
      input: "gradients/CTCLoss_grad/ExpandDims"
      input: "gradients/CTCLoss_grad/PreventGradient"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/transpose_1_grad/InvertPermutation"
      op: "InvertPermutation"
      input: "transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/transpose_1_grad/transpose"
      op: "Transpose"
      input: "gradients/CTCLoss_grad/mul"
      input: "gradients/transpose_1_grad/InvertPermutation"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Reshape_1_grad/Shape"
      op: "Shape"
      input: "add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/Reshape_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/transpose_1_grad/transpose"
      input: "gradients/Reshape_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/add_grad/Shape"
      op: "Shape"
      input: "MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12
          }
        }
      }
    }
    node {
      name: "gradients/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/add_grad/Shape"
      input: "gradients/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/add_grad/Sum"
      op: "Sum"
      input: "gradients/Reshape_1_grad/Reshape"
      input: "gradients/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/add_grad/Sum"
      input: "gradients/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/Reshape_1_grad/Reshape"
      input: "gradients/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/add_grad/Sum_1"
      input: "gradients/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/add_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/add_grad/Reshape"
      input: "^gradients/add_grad/Reshape_1"
    }
    node {
      name: "gradients/add_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/add_grad/Reshape"
      input: "^gradients/add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/add_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/add_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/add_grad/Reshape_1"
      input: "^gradients/add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/add_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/add_grad/tuple/control_dependency"
      input: "Variable_1/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "Reshape"
      input: "gradients/add_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/MatMul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/MatMul_grad/MatMul"
      input: "^gradients/MatMul_grad/MatMul_1"
    }
    node {
      name: "gradients/MatMul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/MatMul_grad/MatMul"
      input: "^gradients/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/MatMul_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/MatMul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/MatMul_grad/MatMul_1"
      input: "^gradients/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/MatMul_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/Reshape_grad/Shape"
      op: "Shape"
      input: "rnn/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/Reshape_grad/Reshape"
      op: "Reshape"
      input: "gradients/MatMul_grad/tuple/control_dependency"
      input: "gradients/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/transpose_grad/InvertPermutation"
      op: "InvertPermutation"
      input: "rnn/concat_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/transpose_grad/transpose"
      op: "Transpose"
      input: "gradients/Reshape_grad/Reshape"
      input: "gradients/rnn/transpose_grad/InvertPermutation"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
      op: "TensorArrayGradV3"
      input: "rnn/TensorArray"
      input: "rnn/while/Exit_1"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/TensorArray"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "source"
        value {
          s: "gradients"
        }
      }
    }
    node {
      name: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
      op: "Identity"
      input: "rnn/while/Exit_1"
      input: "^gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/TensorArray"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
      op: "TensorArrayScatterV3"
      input: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
      input: "rnn/TensorArrayStack/range"
      input: "gradients/rnn/transpose_grad/transpose"
      input: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/zeros_like_1"
      op: "ZerosLike"
      input: "rnn/while/Exit_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/zeros_like_2"
      op: "ZerosLike"
      input: "rnn/while/Exit_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/zeros_like_3"
      op: "ZerosLike"
      input: "rnn/while/Exit_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/zeros_like_4"
      op: "ZerosLike"
      input: "rnn/while/Exit_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/zeros_like_5"
      op: "ZerosLike"
      input: "rnn/while/Exit_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/zeros_like_6"
      op: "ZerosLike"
      input: "rnn/while/Exit_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Exit_1_grad/b_exit"
      op: "Enter"
      input: "gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Exit_2_grad/b_exit"
      op: "Enter"
      input: "gradients/zeros_like_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Exit_3_grad/b_exit"
      op: "Enter"
      input: "gradients/zeros_like_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Exit_4_grad/b_exit"
      op: "Enter"
      input: "gradients/zeros_like_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Exit_5_grad/b_exit"
      op: "Enter"
      input: "gradients/zeros_like_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Exit_6_grad/b_exit"
      op: "Enter"
      input: "gradients/zeros_like_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Exit_7_grad/b_exit"
      op: "Enter"
      input: "gradients/zeros_like_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_1_grad/b_switch"
      op: "Merge"
      input: "gradients/rnn/while/Exit_1_grad/b_exit"
      input: "gradients/rnn/while/Switch_1_grad_1/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_2_grad/b_switch"
      op: "Merge"
      input: "gradients/rnn/while/Exit_2_grad/b_exit"
      input: "gradients/rnn/while/Switch_2_grad_1/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_3_grad/b_switch"
      op: "Merge"
      input: "gradients/rnn/while/Exit_3_grad/b_exit"
      input: "gradients/rnn/while/Switch_3_grad_1/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_4_grad/b_switch"
      op: "Merge"
      input: "gradients/rnn/while/Exit_4_grad/b_exit"
      input: "gradients/rnn/while/Switch_4_grad_1/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_5_grad/b_switch"
      op: "Merge"
      input: "gradients/rnn/while/Exit_5_grad/b_exit"
      input: "gradients/rnn/while/Switch_5_grad_1/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_6_grad/b_switch"
      op: "Merge"
      input: "gradients/rnn/while/Exit_6_grad/b_exit"
      input: "gradients/rnn/while/Switch_6_grad_1/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_7_grad/b_switch"
      op: "Merge"
      input: "gradients/rnn/while/Exit_7_grad/b_exit"
      input: "gradients/rnn/while/Switch_7_grad_1/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_1_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/Switch_1_grad/b_switch"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_1_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Merge_1_grad/Switch"
    }
    node {
      name: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Merge_1_grad/Switch"
      input: "^gradients/rnn/while/Merge_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_1_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Merge_1_grad/Switch:1"
      input: "^gradients/rnn/while/Merge_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_1_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_2_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/Switch_2_grad/b_switch"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_2_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_2_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Merge_2_grad/Switch"
    }
    node {
      name: "gradients/rnn/while/Merge_2_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Merge_2_grad/Switch"
      input: "^gradients/rnn/while/Merge_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_2_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_2_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Merge_2_grad/Switch:1"
      input: "^gradients/rnn/while/Merge_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_2_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_3_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/Switch_3_grad/b_switch"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_3_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_3_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Merge_3_grad/Switch"
    }
    node {
      name: "gradients/rnn/while/Merge_3_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Merge_3_grad/Switch"
      input: "^gradients/rnn/while/Merge_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_3_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_3_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Merge_3_grad/Switch:1"
      input: "^gradients/rnn/while/Merge_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_3_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_4_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/Switch_4_grad/b_switch"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_4_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_4_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Merge_4_grad/Switch"
    }
    node {
      name: "gradients/rnn/while/Merge_4_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Merge_4_grad/Switch"
      input: "^gradients/rnn/while/Merge_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_4_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_4_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Merge_4_grad/Switch:1"
      input: "^gradients/rnn/while/Merge_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_4_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_5_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/Switch_5_grad/b_switch"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_5_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_5_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Merge_5_grad/Switch"
    }
    node {
      name: "gradients/rnn/while/Merge_5_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Merge_5_grad/Switch"
      input: "^gradients/rnn/while/Merge_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_5_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_5_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Merge_5_grad/Switch:1"
      input: "^gradients/rnn/while/Merge_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_5_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_6_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/Switch_6_grad/b_switch"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_6_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_6_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Merge_6_grad/Switch"
    }
    node {
      name: "gradients/rnn/while/Merge_6_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Merge_6_grad/Switch"
      input: "^gradients/rnn/while/Merge_6_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_6_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_6_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Merge_6_grad/Switch:1"
      input: "^gradients/rnn/while/Merge_6_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_6_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_7_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/Switch_7_grad/b_switch"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_7_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_7_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Merge_7_grad/Switch"
    }
    node {
      name: "gradients/rnn/while/Merge_7_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Merge_7_grad/Switch"
      input: "^gradients/rnn/while/Merge_7_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_7_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Merge_7_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Merge_7_grad/Switch:1"
      input: "^gradients/rnn/while/Merge_7_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_7_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Enter_1_grad/Exit"
      op: "Exit"
      input: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Enter_2_grad/Exit"
      op: "Exit"
      input: "gradients/rnn/while/Merge_2_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Enter_3_grad/Exit"
      op: "Exit"
      input: "gradients/rnn/while/Merge_3_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Enter_4_grad/Exit"
      op: "Exit"
      input: "gradients/rnn/while/Merge_4_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Enter_5_grad/Exit"
      op: "Exit"
      input: "gradients/rnn/while/Merge_5_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Enter_6_grad/Exit"
      op: "Exit"
      input: "gradients/rnn/while/Merge_6_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Enter_7_grad/Exit"
      op: "Exit"
      input: "gradients/rnn/while/Merge_7_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
      op: "Enter"
      input: "rnn/TensorArray"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
      op: "TensorArrayGradV3"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
      input: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "source"
        value {
          s: "gradients"
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
      op: "Identity"
      input: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
      input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
      input: "rnn/while/Identity"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
      op: "ControlTrigger"
      input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
      input: "^gradients/rnn/while/Select_1_grad/zeros_like/StackPop"
      input: "^gradients/rnn/while/Select_1_grad/Select/StackPop"
      input: "^gradients/rnn/while/Select_2_grad/zeros_like/StackPop"
      input: "^gradients/rnn/while/Select_2_grad/Select/StackPop"
      input: "^gradients/rnn/while/Select_3_grad/zeros_like/StackPop"
      input: "^gradients/rnn/while/Select_3_grad/Select/StackPop"
      input: "^gradients/rnn/while/Select_4_grad/zeros_like/StackPop"
      input: "^gradients/rnn/while/Select_4_grad/Select/StackPop"
      input: "^gradients/rnn/while/Select_5_grad/zeros_like/StackPop"
      input: "^gradients/rnn/while/Select_5_grad/Select/StackPop"
      input: "^gradients/rnn/while/Select_6_grad/zeros_like/StackPop"
      input: "^gradients/rnn/while/Select_6_grad/Select/StackPop"
      input: "^gradients/rnn/while/Select_grad/Select/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop"
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      op: "TensorArrayReadV3"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
      input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
      input: "^gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Switch_1_grad/b_switch"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/zeros_like/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/zeros_like/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_1_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/zeros_like/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_1_grad/zeros_like/RefEnter"
      input: "rnn/while/Identity_2"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/zeros_like/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_1_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/zeros_like/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_1_grad/zeros_like/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/rnn/while/Select_1_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/Select/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/Select/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_1_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/Select/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_1_grad/Select/RefEnter"
      input: "rnn/while/GreaterEqual_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/Select/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_1_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/Select/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_1_grad/Select/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/Select"
      op: "Select"
      input: "gradients/rnn/while/Select_1_grad/Select/StackPop"
      input: "gradients/rnn/while/Merge_2_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_1_grad/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/Select_1"
      op: "Select"
      input: "gradients/rnn/while/Select_1_grad/Select/StackPop"
      input: "gradients/rnn/while/Select_1_grad/zeros_like"
      input: "gradients/rnn/while/Merge_2_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Select_1_grad/Select"
      input: "^gradients/rnn/while/Select_1_grad/Select_1"
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Select_1_grad/Select"
      input: "^gradients/rnn/while/Select_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_1_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Select_1_grad/Select_1"
      input: "^gradients/rnn/while/Select_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_1_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/zeros_like/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/zeros_like/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_2_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/zeros_like/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_2_grad/zeros_like/RefEnter"
      input: "rnn/while/Identity_3"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/zeros_like/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_2_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/zeros_like/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_2_grad/zeros_like/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/rnn/while/Select_2_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/Select/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/Select/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_2_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/Select/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_2_grad/Select/RefEnter"
      input: "rnn/while/GreaterEqual_2"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/Select/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_2_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/Select/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_2_grad/Select/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/Select"
      op: "Select"
      input: "gradients/rnn/while/Select_2_grad/Select/StackPop"
      input: "gradients/rnn/while/Merge_3_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_2_grad/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/Select_1"
      op: "Select"
      input: "gradients/rnn/while/Select_2_grad/Select/StackPop"
      input: "gradients/rnn/while/Select_2_grad/zeros_like"
      input: "gradients/rnn/while/Merge_3_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Select_2_grad/Select"
      input: "^gradients/rnn/while/Select_2_grad/Select_1"
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Select_2_grad/Select"
      input: "^gradients/rnn/while/Select_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_2_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_2_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Select_2_grad/Select_1"
      input: "^gradients/rnn/while/Select_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_2_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/zeros_like/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/zeros_like/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_3_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/zeros_like/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_3_grad/zeros_like/RefEnter"
      input: "rnn/while/Identity_4"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/zeros_like/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_3_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/zeros_like/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_3_grad/zeros_like/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/rnn/while/Select_3_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/Select/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/Select/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_3_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/Select/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_3_grad/Select/RefEnter"
      input: "rnn/while/GreaterEqual_3"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/Select/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_3_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/Select/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_3_grad/Select/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/Select"
      op: "Select"
      input: "gradients/rnn/while/Select_3_grad/Select/StackPop"
      input: "gradients/rnn/while/Merge_4_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_3_grad/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/Select_1"
      op: "Select"
      input: "gradients/rnn/while/Select_3_grad/Select/StackPop"
      input: "gradients/rnn/while/Select_3_grad/zeros_like"
      input: "gradients/rnn/while/Merge_4_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Select_3_grad/Select"
      input: "^gradients/rnn/while/Select_3_grad/Select_1"
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Select_3_grad/Select"
      input: "^gradients/rnn/while/Select_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_3_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_3_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Select_3_grad/Select_1"
      input: "^gradients/rnn/while/Select_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_3_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/zeros_like/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/zeros_like/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_4_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/zeros_like/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_4_grad/zeros_like/RefEnter"
      input: "rnn/while/Identity_5"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/zeros_like/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_4_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/zeros_like/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_4_grad/zeros_like/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/rnn/while/Select_4_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/Select/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/Select/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_4_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/Select/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_4_grad/Select/RefEnter"
      input: "rnn/while/GreaterEqual_4"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/Select/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_4_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/Select/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_4_grad/Select/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/Select"
      op: "Select"
      input: "gradients/rnn/while/Select_4_grad/Select/StackPop"
      input: "gradients/rnn/while/Merge_5_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_4_grad/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/Select_1"
      op: "Select"
      input: "gradients/rnn/while/Select_4_grad/Select/StackPop"
      input: "gradients/rnn/while/Select_4_grad/zeros_like"
      input: "gradients/rnn/while/Merge_5_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Select_4_grad/Select"
      input: "^gradients/rnn/while/Select_4_grad/Select_1"
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Select_4_grad/Select"
      input: "^gradients/rnn/while/Select_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_4_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_4_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Select_4_grad/Select_1"
      input: "^gradients/rnn/while/Select_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_4_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/zeros_like/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/zeros_like/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_5_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/zeros_like/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_5_grad/zeros_like/RefEnter"
      input: "rnn/while/Identity_6"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/zeros_like/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_5_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/zeros_like/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_5_grad/zeros_like/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/rnn/while/Select_5_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/Select/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/Select/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_5_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/Select/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_5_grad/Select/RefEnter"
      input: "rnn/while/GreaterEqual_5"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/Select/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_5_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/Select/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_5_grad/Select/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/Select"
      op: "Select"
      input: "gradients/rnn/while/Select_5_grad/Select/StackPop"
      input: "gradients/rnn/while/Merge_6_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_5_grad/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/Select_1"
      op: "Select"
      input: "gradients/rnn/while/Select_5_grad/Select/StackPop"
      input: "gradients/rnn/while/Select_5_grad/zeros_like"
      input: "gradients/rnn/while/Merge_6_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Select_5_grad/Select"
      input: "^gradients/rnn/while/Select_5_grad/Select_1"
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Select_5_grad/Select"
      input: "^gradients/rnn/while/Select_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_5_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_5_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Select_5_grad/Select_1"
      input: "^gradients/rnn/while/Select_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_5_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/zeros_like/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/zeros_like/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_6_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/zeros_like/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_6_grad/zeros_like/RefEnter"
      input: "rnn/while/Identity_7"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/zeros_like/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_6_grad/zeros_like/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/zeros_like/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_6_grad/zeros_like/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/Identity_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/rnn/while/Select_6_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/Select/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/Select/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_6_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/Select/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_6_grad/Select/RefEnter"
      input: "rnn/while/GreaterEqual_6"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/Select/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_6_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/Select/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_6_grad/Select/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/Select"
      op: "Select"
      input: "gradients/rnn/while/Select_6_grad/Select/StackPop"
      input: "gradients/rnn/while/Merge_7_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_6_grad/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/Select_1"
      op: "Select"
      input: "gradients/rnn/while/Select_6_grad/Select/StackPop"
      input: "gradients/rnn/while/Select_6_grad/zeros_like"
      input: "gradients/rnn/while/Merge_7_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Select_6_grad/Select"
      input: "^gradients/rnn/while/Select_6_grad/Select_1"
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Select_6_grad/Select"
      input: "^gradients/rnn/while/Select_6_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_6_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_6_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Select_6_grad/Select_1"
      input: "^gradients/rnn/while/Select_6_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_6_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/zeros_like/Enter"
      op: "Enter"
      input: "rnn/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/rnn/while/Select_grad/zeros_like/Enter"
      input: "^gradients/Sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/Select/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/Select/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/Select/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/Select_grad/Select/RefEnter"
      input: "rnn/while/GreaterEqual"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/Select/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/Select_grad/Select/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/Select/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/Select_grad/Select/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/GreaterEqual"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_BOOL
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/Select"
      op: "Select"
      input: "gradients/rnn/while/Select_grad/Select/StackPop"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
      input: "gradients/rnn/while/Select_grad/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/Select_1"
      op: "Select"
      input: "gradients/rnn/while/Select_grad/Select/StackPop"
      input: "gradients/rnn/while/Select_grad/zeros_like"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/Select_grad/Select"
      input: "^gradients/rnn/while/Select_grad/Select_1"
    }
    node {
      name: "gradients/rnn/while/Select_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/Select_grad/Select"
      input: "^gradients/rnn/while/Select_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Select_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/Select_grad/Select_1"
      input: "^gradients/rnn/while/Select_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/rnn/while/Select_6_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_6_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul"
      op: "Mul"
      input: "gradients/AddN"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      input: "gradients/AddN"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_1_grad_1/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul_1/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul_1/Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/rnn/while/Select_5_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1_grad/TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_5_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/Identity_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency"
      input: "gradients/rnn/while/Select_5_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape_1"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/Identity_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_5_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/mul_1/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/mul_1/Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/Identity_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_5_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/mul_1/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/mul_1/Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split/split_dim"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_grad/TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/StackPop"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/rnn/while/Select_5_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_5_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_6_grad_1/NextIteration"
      op: "NextIteration"
      input: "gradients/AddN_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul/Enter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Rank"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat/axis"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod"
      op: "FloorMod"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN"
      op: "ShapeN"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop"
      input: "gradients/rnn/while/Select_6_grad/zeros_like/StackPop"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
      op: "Slice"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ConcatOffset"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ConcatOffset:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_3"
      op: "AddN"
      input: "gradients/rnn/while/Select_4_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_4_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul"
      op: "Mul"
      input: "gradients/AddN_3"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      input: "gradients/AddN_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_4"
      op: "AddN"
      input: "gradients/rnn/while/Select_6_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_6_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_7_grad_1/NextIteration"
      op: "NextIteration"
      input: "gradients/AddN_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul_1/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul_1/Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_5"
      op: "AddN"
      input: "gradients/rnn/while/Select_3_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1_grad/TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_3_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_5"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_5"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/Identity_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency"
      input: "gradients/rnn/while/Select_3_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape_1"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/Identity_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_3_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/mul_1/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/mul_1/Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/Identity_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_3_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/mul_1/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/mul_1/Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split/split_dim"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_grad/TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/StackPop"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_6"
      op: "AddN"
      input: "gradients/rnn/while/Select_3_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_3_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_4_grad_1/NextIteration"
      op: "NextIteration"
      input: "gradients/AddN_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul/Enter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 300
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Rank"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat/axis"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod"
      op: "FloorMod"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN"
      op: "ShapeN"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop"
      input: "gradients/rnn/while/Select_4_grad/zeros_like/StackPop"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
      op: "Slice"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ConcatOffset"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ConcatOffset:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_7"
      op: "AddN"
      input: "gradients/rnn/while/Select_2_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_2_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul"
      op: "Mul"
      input: "gradients/AddN_7"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      input: "gradients/AddN_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_8"
      op: "AddN"
      input: "gradients/rnn/while/Select_4_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_4_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_5_grad_1/NextIteration"
      op: "NextIteration"
      input: "gradients/AddN_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul_1/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul_1/Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_9"
      op: "AddN"
      input: "gradients/rnn/while/Select_1_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1_grad/TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_1_grad/Select_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_9"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_9"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/Identity_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency"
      input: "gradients/rnn/while/Select_1_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush_1"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPop_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape"
      op: "Shape"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape_1"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/Identity_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_1_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/mul_1/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/mul_1/Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 150
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
      op: "Shape"
      input: "rnn/while/Identity_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/mul"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/Select_1_grad/zeros_like/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Sum"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/mul_1/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/mul_1"
      op: "Mul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/mul_1/Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/mul_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Sum_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Reshape"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split/split_dim"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split/split_dim"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_grad/TanhGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/StackPop"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_10"
      op: "AddN"
      input: "gradients/rnn/while/Select_1_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/tuple/control_dependency_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_1_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/BiasAddGrad"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_2_grad_1/NextIteration"
      op: "NextIteration"
      input: "gradients/AddN_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul/Enter"
      op: "Enter"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul/Enter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 191
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 191
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 191
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 191
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Rank"
      op: "Const"
      input: "^gradients/Sub"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter"
      input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat/axis"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat/axis"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod"
      op: "FloorMod"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Shape"
      op: "Shape"
      input: "rnn/while/TensorArrayReadV3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc"
      op: "Stack"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/TensorArrayReadV3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "stack_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/TensorArrayReadV3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPush"
      op: "StackPush"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter"
      input: "rnn/while/TensorArrayReadV3"
      input: "^gradients/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/TensorArrayReadV3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "swap_memory"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
      op: "RefEnter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/TensorArrayReadV3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: true
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop"
      op: "StackPop"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
      input: "^gradients/Sub"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/while/TensorArrayReadV3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 41
              }
            }
          }
        }
      }
      attr {
        key: "elem_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN"
      op: "ShapeN"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPop"
      input: "gradients/rnn/while/Select_2_grad/zeros_like/StackPop"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
      op: "Slice"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ConcatOffset"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ConcatOffset:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/group_deps"
      op: "NoOp"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 41
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
      input: "^gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Slice_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_1"
      op: "Enter"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "frame_name"
        value {
          s: "gradients/rnn/while/rnn/while/"
        }
      }
      attr {
        key: "is_constant"
        value {
          b: false
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 32
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_2"
      op: "Merge"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/NextIteration"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Switch"
      op: "Switch"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_2"
      input: "gradients/b_count_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Add"
      op: "Add"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Switch:1"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/NextIteration"
      op: "NextIteration"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_3"
      op: "Exit"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_11"
      op: "AddN"
      input: "gradients/rnn/while/Select_2_grad/tuple/control_dependency"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/tuple/control_dependency_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/rnn/while/Select_2_grad/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/rnn/while/Switch_3_grad_1/NextIteration"
      op: "NextIteration"
      input: "gradients/AddN_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 191
            }
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 300
            }
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 300
            }
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 600
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 600
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum/Assign"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum/read"
      op: "Identity"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
    }
    node {
      name: "Variable_1/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Variable_1/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 150
            }
            dim {
              size: 12
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "Variable_1/Momentum/Assign"
      op: "Assign"
      input: "Variable_1/Momentum"
      input: "Variable_1/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Variable_1/Momentum/read"
      op: "Identity"
      input: "Variable_1/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "Variable_2/Momentum/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 12
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Variable_2/Momentum"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 12
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "Variable_2/Momentum/Assign"
      op: "Assign"
      input: "Variable_2/Momentum"
      input: "Variable_2/Momentum/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Variable_2/Momentum/read"
      op: "Identity"
      input: "Variable_2/Momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
    }
    node {
      name: "Momentum/learning_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.00019999999494757503
          }
        }
      }
    }
    node {
      name: "Momentum/momentum"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/bias/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/bias/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/bias/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/ApplyMomentum"
      op: "ApplyMomentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter_grad/b_acc_3"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_Variable_1/ApplyMomentum"
      op: "ApplyMomentum"
      input: "Variable_1"
      input: "Variable_1/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/MatMul_grad/tuple/control_dependency_1"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum/update_Variable_2/ApplyMomentum"
      op: "ApplyMomentum"
      input: "Variable_2"
      input: "Variable_2/Momentum"
      input: "Momentum/learning_rate"
      input: "gradients/add_grad/tuple/control_dependency_1"
      input: "Momentum/momentum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "Momentum"
      op: "NoOp"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/bias/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/bias/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/bias/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/ApplyMomentum"
      input: "^Momentum/update_rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/ApplyMomentum"
      input: "^Momentum/update_Variable_1/ApplyMomentum"
      input: "^Momentum/update_Variable_2/ApplyMomentum"
    }
    node {
      name: "CTCGreedyDecoder"
      op: "CTCGreedyDecoder"
      input: "transpose_1"
      input: "Placeholder_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "merge_repeated"
        value {
          b: true
        }
      }
    }
    node {
      name: "Cast"
      op: "Cast"
      input: "CTCGreedyDecoder:1"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "edit_distance"
      op: "EditDistance"
      input: "CTCGreedyDecoder"
      input: "Cast"
      input: "CTCGreedyDecoder:2"
      input: "Placeholder_2"
      input: "Placeholder_1"
      input: "Placeholder"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "normalize"
        value {
          b: true
        }
      }
    }
    node {
      name: "Rank_1"
      op: "Rank"
      input: "edit_distance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "range_1"
      op: "Range"
      input: "range_1/start"
      input: "Rank_1"
      input: "range_1/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Mean_1"
      op: "Mean"
      input: "edit_distance"
      input: "range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "prediction/dimension"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "prediction"
      op: "ArgMax"
      input: "transpose_1"
      input: "prediction/dimension"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^Variable/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Assign"
      input: "^Variable_1/Assign"
      input: "^Variable_2/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum/Assign"
      input: "^Variable_1/Momentum/Assign"
      input: "^Variable_2/Momentum/Assign"
    }
    node {
      name: "save/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 35
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 35
              }
            }
            string_val: "Variable"
            string_val: "Variable_1"
            string_val: "Variable_1/Momentum"
            string_val: "Variable_2"
            string_val: "Variable_2/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 35
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 35
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "Variable"
      input: "Variable_1"
      input: "Variable_1/Momentum"
      input: "Variable_2"
      input: "Variable_2/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_INT32
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_INT32
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "Variable"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_1/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_1/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_1"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_1/tensor_names"
      input: "save/RestoreV2_1/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "Variable_1"
      input: "save/RestoreV2_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable_1/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_2/tensor_names"
      input: "save/RestoreV2_2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "Variable_1/Momentum"
      input: "save/RestoreV2_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_3/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable_2"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_3/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_3"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_3/tensor_names"
      input: "save/RestoreV2_3/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "Variable_2"
      input: "save/RestoreV2_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_4/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable_2/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_4/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_4"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_4/tensor_names"
      input: "save/RestoreV2_4/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "Variable_2/Momentum"
      input: "save/RestoreV2_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_5/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_5/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_5"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_5/tensor_names"
      input: "save/RestoreV2_5/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      input: "save/RestoreV2_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_6/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_6/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_6"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_6/tensor_names"
      input: "save/RestoreV2_6/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
      input: "save/RestoreV2_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_7/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_7/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_7"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_7/tensor_names"
      input: "save/RestoreV2_7/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      input: "save/RestoreV2_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_8/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_8/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_8"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_8/tensor_names"
      input: "save/RestoreV2_8/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
      input: "save/RestoreV2_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_9/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_9/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_9"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_9/tensor_names"
      input: "save/RestoreV2_9/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
      input: "save/RestoreV2_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_10/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_10/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_10"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_10/tensor_names"
      input: "save/RestoreV2_10/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
      input: "save/RestoreV2_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_11/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_11/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_11"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_11/tensor_names"
      input: "save/RestoreV2_11/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
      input: "save/RestoreV2_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_12/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_12/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_12"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_12/tensor_names"
      input: "save/RestoreV2_12/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
      input: "save/RestoreV2_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_13/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_13/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_13"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_13/tensor_names"
      input: "save/RestoreV2_13/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
      input: "save/RestoreV2_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_14/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_14/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_14"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_14/tensor_names"
      input: "save/RestoreV2_14/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
      input: "save/RestoreV2_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_15/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_15/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_15"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_15/tensor_names"
      input: "save/RestoreV2_15/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      input: "save/RestoreV2_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_16/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_16/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_16"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_16/tensor_names"
      input: "save/RestoreV2_16/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
      input: "save/RestoreV2_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_17/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_17/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_17"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_17/tensor_names"
      input: "save/RestoreV2_17/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      input: "save/RestoreV2_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_18/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_18/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_18"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_18/tensor_names"
      input: "save/RestoreV2_18/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
      input: "save/RestoreV2_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_19/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_19/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_19"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_19/tensor_names"
      input: "save/RestoreV2_19/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
      input: "save/RestoreV2_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_20/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_20/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_20"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_20/tensor_names"
      input: "save/RestoreV2_20/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
      input: "save/RestoreV2_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_21/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_21/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_21"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_21/tensor_names"
      input: "save/RestoreV2_21/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
      input: "save/RestoreV2_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_22/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_22/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_22"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_22/tensor_names"
      input: "save/RestoreV2_22/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
      input: "save/RestoreV2_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_23/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_23/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_23"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_23/tensor_names"
      input: "save/RestoreV2_23/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
      input: "save/RestoreV2_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_24/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_24/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_24"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_24/tensor_names"
      input: "save/RestoreV2_24/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
      input: "save/RestoreV2_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_25/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_25/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_25"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_25/tensor_names"
      input: "save/RestoreV2_25/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
      input: "save/RestoreV2_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_26/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_26/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_26"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_26/tensor_names"
      input: "save/RestoreV2_26/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
      input: "save/RestoreV2_26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_27/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_27/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_27"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_27/tensor_names"
      input: "save/RestoreV2_27/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
      input: "save/RestoreV2_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_28/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_28/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_28"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_28/tensor_names"
      input: "save/RestoreV2_28/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
      input: "save/RestoreV2_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_29/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_29/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_29"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_29/tensor_names"
      input: "save/RestoreV2_29/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
      input: "save/RestoreV2_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_30/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_30/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_30"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_30/tensor_names"
      input: "save/RestoreV2_30/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_30"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
      input: "save/RestoreV2_30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_31/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_31/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_31"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_31/tensor_names"
      input: "save/RestoreV2_31/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_31"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
      input: "save/RestoreV2_31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_32/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_32/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_32"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_32/tensor_names"
      input: "save/RestoreV2_32/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_32"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
      input: "save/RestoreV2_32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_33/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_33/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_33"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_33/tensor_names"
      input: "save/RestoreV2_33/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_33"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
      input: "save/RestoreV2_33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_34/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_34/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_34"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_34/tensor_names"
      input: "save/RestoreV2_34/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_34"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
      input: "save/RestoreV2_34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_2"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_30"
      input: "^save/Assign_31"
      input: "^save/Assign_32"
      input: "^save/Assign_33"
      input: "^save/Assign_34"
    }
    node {
      name: "init_1"
      op: "NoOp"
      input: "^Variable/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Assign"
      input: "^Variable_1/Assign"
      input: "^Variable_2/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum/Assign"
      input: "^rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum/Assign"
      input: "^Variable_1/Momentum/Assign"
      input: "^Variable_2/Momentum/Assign"
    }
    node {
      name: "save_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_5761becb93334faab5e91d6762dbbc2a/part"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin"
      op: "StringJoin"
      input: "save_1/Const"
      input: "save_1/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_1/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename"
      op: "ShardedFilename"
      input: "save_1/StringJoin"
      input: "save_1/ShardedFilename/shard"
      input: "save_1/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 35
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 35
              }
            }
            string_val: "Variable"
            string_val: "Variable_1"
            string_val: "Variable_1/Momentum"
            string_val: "Variable_2"
            string_val: "Variable_2/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 35
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 35
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/ShardedFilename"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "Variable"
      input: "Variable_1"
      input: "Variable_1/Momentum"
      input: "Variable_2"
      input: "Variable_2/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_INT32
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/ShardedFilename"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_1/ShardedFilename"
      input: "^save_1/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_1/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Identity"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/control_dependency"
      input: "^save_1/MergeV2Checkpoints"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_INT32
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "Variable"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_1/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_1/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_1"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_1/tensor_names"
      input: "save_1/RestoreV2_1/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "Variable_1"
      input: "save_1/RestoreV2_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable_1/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_2/tensor_names"
      input: "save_1/RestoreV2_2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "Variable_1/Momentum"
      input: "save_1/RestoreV2_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_3/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable_2"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_3/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_3"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_3/tensor_names"
      input: "save_1/RestoreV2_3/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "Variable_2"
      input: "save_1/RestoreV2_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_4/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "Variable_2/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_4/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_4"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_4/tensor_names"
      input: "save_1/RestoreV2_4/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "Variable_2/Momentum"
      input: "save_1/RestoreV2_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_5/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_5/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_5"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_5/tensor_names"
      input: "save_1/RestoreV2_5/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
      input: "save_1/RestoreV2_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_6/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_6/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_6"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_6/tensor_names"
      input: "save_1/RestoreV2_6/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum"
      input: "save_1/RestoreV2_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_7/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_7/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_7"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_7/tensor_names"
      input: "save_1/RestoreV2_7/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
      input: "save_1/RestoreV2_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_8/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_8/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_8"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_8/tensor_names"
      input: "save_1/RestoreV2_8/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum"
      input: "save_1/RestoreV2_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 191
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_9/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_9/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_9"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_9/tensor_names"
      input: "save_1/RestoreV2_9/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
      input: "save_1/RestoreV2_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_10/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_10/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_10"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_10/tensor_names"
      input: "save_1/RestoreV2_10/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum"
      input: "save_1/RestoreV2_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_11/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_11/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_11"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_11/tensor_names"
      input: "save_1/RestoreV2_11/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
      input: "save_1/RestoreV2_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_12/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_12/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_12"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_12/tensor_names"
      input: "save_1/RestoreV2_12/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum"
      input: "save_1/RestoreV2_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_13/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_13/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_13"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_13/tensor_names"
      input: "save_1/RestoreV2_13/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
      input: "save_1/RestoreV2_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_14/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_14/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_14"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_14/tensor_names"
      input: "save_1/RestoreV2_14/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum"
      input: "save_1/RestoreV2_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_15/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_15/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_15"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_15/tensor_names"
      input: "save_1/RestoreV2_15/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
      input: "save_1/RestoreV2_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_16/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_16/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_16"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_16/tensor_names"
      input: "save_1/RestoreV2_16/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum"
      input: "save_1/RestoreV2_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_17/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_17/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_17"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_17/tensor_names"
      input: "save_1/RestoreV2_17/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
      input: "save_1/RestoreV2_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_18/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_18/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_18"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_18/tensor_names"
      input: "save_1/RestoreV2_18/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum"
      input: "save_1/RestoreV2_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_19/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_19/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_19"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_19/tensor_names"
      input: "save_1/RestoreV2_19/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
      input: "save_1/RestoreV2_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_20/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_20/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_20"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_20/tensor_names"
      input: "save_1/RestoreV2_20/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum"
      input: "save_1/RestoreV2_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_21/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_21/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_21"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_21/tensor_names"
      input: "save_1/RestoreV2_21/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
      input: "save_1/RestoreV2_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_22/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_22/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_22"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_22/tensor_names"
      input: "save_1/RestoreV2_22/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum"
      input: "save_1/RestoreV2_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_23/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_23/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_23"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_23/tensor_names"
      input: "save_1/RestoreV2_23/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
      input: "save_1/RestoreV2_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_24/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_24/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_24"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_24/tensor_names"
      input: "save_1/RestoreV2_24/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum"
      input: "save_1/RestoreV2_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_25/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_25/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_25"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_25/tensor_names"
      input: "save_1/RestoreV2_25/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
      input: "save_1/RestoreV2_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_26/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_26/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_26"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_26/tensor_names"
      input: "save_1/RestoreV2_26/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum"
      input: "save_1/RestoreV2_26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_27/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_27/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_27"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_27/tensor_names"
      input: "save_1/RestoreV2_27/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
      input: "save_1/RestoreV2_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_28/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_28/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_28"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_28/tensor_names"
      input: "save_1/RestoreV2_28/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum"
      input: "save_1/RestoreV2_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 300
              }
              dim {
                size: 600
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_29/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_29/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_29"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_29/tensor_names"
      input: "save_1/RestoreV2_29/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
      input: "save_1/RestoreV2_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_30/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_30/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_30"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_30/tensor_names"
      input: "save_1/RestoreV2_30/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_30"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum"
      input: "save_1/RestoreV2_30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_31/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_31/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_31"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_31/tensor_names"
      input: "save_1/RestoreV2_31/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_31"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
      input: "save_1/RestoreV2_31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_32/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_32/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_32"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_32/tensor_names"
      input: "save_1/RestoreV2_32/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_32"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum"
      input: "save_1/RestoreV2_32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_33/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_33/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_33"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_33/tensor_names"
      input: "save_1/RestoreV2_33/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_33"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
      input: "save_1/RestoreV2_33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_34/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_34/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_34"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_34/tensor_names"
      input: "save_1/RestoreV2_34/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_34"
      op: "Assign"
      input: "rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum"
      input: "save_1/RestoreV2_34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 150
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_shard"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_30"
      input: "^save_1/Assign_31"
      input: "^save_1/Assign_32"
      input: "^save_1/Assign_33"
      input: "^save_1/Assign_34"
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/restore_shard"
    }
    versions {
      producer: 24
    }
  }
  saver_def {
    filename_tensor_name: "save_1/Const:0"
    save_tensor_name: "save_1/Identity:0"
    restore_op_name: "save_1/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "train_op"
    value {
      node_list {
        value: "Momentum"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n,rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0\0221rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign\0321rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read:0"
        value: "\n*rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0\022/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Assign\032/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag:0\0223rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Assign\0323rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag:0\0223rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Assign\0323rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag:0\0223rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Assign\0323rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/read:0"
        value: "\n,rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0\0221rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\0321rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read:0"
        value: "\n*rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0\022/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Assign\032/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag:0\0223rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Assign\0323rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag:0\0223rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Assign\0323rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag:0\0223rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Assign\0323rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/read:0"
        value: "\n,rnn/multi_rnn_cell/cell_2/lstm_cell/kernel:0\0221rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Assign\0321rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/read:0"
        value: "\n*rnn/multi_rnn_cell/cell_2/lstm_cell/bias:0\022/rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Assign\032/rnn/multi_rnn_cell/cell_2/lstm_cell/bias/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag:0\0223rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Assign\0323rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag:0\0223rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Assign\0323rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag:0\0223rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Assign\0323rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/read:0"
        value: "\n\014Variable_1:0\022\021Variable_1/Assign\032\021Variable_1/read:0"
        value: "\n\014Variable_2:0\022\021Variable_2/Assign\032\021Variable_2/read:0"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\nVariable:0\022\017Variable/Assign\032\017Variable/read:0"
        value: "\n,rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0\0221rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Assign\0321rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read:0"
        value: "\n*rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0\022/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Assign\032/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag:0\0223rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Assign\0323rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag:0\0223rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Assign\0323rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag:0\0223rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Assign\0323rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/read:0"
        value: "\n,rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0\0221rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\0321rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read:0"
        value: "\n*rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0\022/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Assign\032/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag:0\0223rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Assign\0323rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag:0\0223rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Assign\0323rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag:0\0223rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Assign\0323rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/read:0"
        value: "\n,rnn/multi_rnn_cell/cell_2/lstm_cell/kernel:0\0221rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Assign\0321rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/read:0"
        value: "\n*rnn/multi_rnn_cell/cell_2/lstm_cell/bias:0\022/rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Assign\032/rnn/multi_rnn_cell/cell_2/lstm_cell/bias/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag:0\0223rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Assign\0323rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag:0\0223rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Assign\0323rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/read:0"
        value: "\n.rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag:0\0223rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Assign\0323rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/read:0"
        value: "\n\014Variable_1:0\022\021Variable_1/Assign\032\021Variable_1/read:0"
        value: "\n\014Variable_2:0\022\021Variable_2/Assign\032\021Variable_2/read:0"
        value: "\n5rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum:0\022:rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum/Assign\032:rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/Momentum/read:0"
        value: "\n3rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum:0\0228rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum/Assign\0328rnn/multi_rnn_cell/cell_0/lstm_cell/bias/Momentum/read:0"
        value: "\n7rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum:0\022<rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum/Assign\032<rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/Momentum/read:0"
        value: "\n7rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum:0\022<rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum/Assign\032<rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/Momentum/read:0"
        value: "\n7rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum:0\022<rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum/Assign\032<rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/Momentum/read:0"
        value: "\n5rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum:0\022:rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum/Assign\032:rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Momentum/read:0"
        value: "\n3rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum:0\0228rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum/Assign\0328rnn/multi_rnn_cell/cell_1/lstm_cell/bias/Momentum/read:0"
        value: "\n7rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum:0\022<rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum/Assign\032<rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/Momentum/read:0"
        value: "\n7rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum:0\022<rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum/Assign\032<rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/Momentum/read:0"
        value: "\n7rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum:0\022<rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum/Assign\032<rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/Momentum/read:0"
        value: "\n5rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum:0\022:rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum/Assign\032:rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/Momentum/read:0"
        value: "\n3rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum:0\0228rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum/Assign\0328rnn/multi_rnn_cell/cell_2/lstm_cell/bias/Momentum/read:0"
        value: "\n7rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum:0\022<rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum/Assign\032<rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/Momentum/read:0"
        value: "\n7rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum:0\022<rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum/Assign\032<rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/Momentum/read:0"
        value: "\n7rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum:0\022<rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum/Assign\032<rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/Momentum/read:0"
        value: "\n\025Variable_1/Momentum:0\022\032Variable_1/Momentum/Assign\032\032Variable_1/Momentum/read:0"
        value: "\n\025Variable_2/Momentum:0\022\032Variable_2/Momentum/Assign\032\032Variable_2/Momentum/read:0"
      }
    }
  }
  collection_def {
    key: "while_context"
    value {
      bytes_list {
        value: "\n\024rnn/while/rnn/while/\020 \030\001*\024rnn/while/LoopCond:02\021rnn/while/Merge:0:\024rnn/while/Identity:0B\020rnn/while/Exit:0B\022rnn/while/Exit_1:0B\022rnn/while/Exit_2:0B\022rnn/while/Exit_3:0B\022rnn/while/Exit_4:0B\022rnn/while/Exit_5:0B\022rnn/while/Exit_6:0B\022rnn/while/Exit_7:0B\025gradients/f_count_2:0J\254\242\004\n\021gradients/Add/y:0\n\017gradients/Add:0\n\021gradients/Merge:0\n\021gradients/Merge:1\n\031gradients/NextIteration:0\n\022gradients/Switch:0\n\022gradients/Switch:1\n\023gradients/f_count:0\n\025gradients/f_count_1:0\n\025gradients/f_count_2:0\n3gradients/rnn/while/Select_1_grad/Select/RefEnter:0\n4gradients/rnn/while/Select_1_grad/Select/StackPush:0\n0gradients/rnn/while/Select_1_grad/Select/f_acc:0\n7gradients/rnn/while/Select_1_grad/zeros_like/RefEnter:0\n8gradients/rnn/while/Select_1_grad/zeros_like/StackPush:0\n4gradients/rnn/while/Select_1_grad/zeros_like/f_acc:0\n3gradients/rnn/while/Select_2_grad/Select/RefEnter:0\n4gradients/rnn/while/Select_2_grad/Select/StackPush:0\n0gradients/rnn/while/Select_2_grad/Select/f_acc:0\n7gradients/rnn/while/Select_2_grad/zeros_like/RefEnter:0\n8gradients/rnn/while/Select_2_grad/zeros_like/StackPush:0\n4gradients/rnn/while/Select_2_grad/zeros_like/f_acc:0\n3gradients/rnn/while/Select_3_grad/Select/RefEnter:0\n4gradients/rnn/while/Select_3_grad/Select/StackPush:0\n0gradients/rnn/while/Select_3_grad/Select/f_acc:0\n7gradients/rnn/while/Select_3_grad/zeros_like/RefEnter:0\n8gradients/rnn/while/Select_3_grad/zeros_like/StackPush:0\n4gradients/rnn/while/Select_3_grad/zeros_like/f_acc:0\n3gradients/rnn/while/Select_4_grad/Select/RefEnter:0\n4gradients/rnn/while/Select_4_grad/Select/StackPush:0\n0gradients/rnn/while/Select_4_grad/Select/f_acc:0\n7gradients/rnn/while/Select_4_grad/zeros_like/RefEnter:0\n8gradients/rnn/while/Select_4_grad/zeros_like/StackPush:0\n4gradients/rnn/while/Select_4_grad/zeros_like/f_acc:0\n3gradients/rnn/while/Select_5_grad/Select/RefEnter:0\n4gradients/rnn/while/Select_5_grad/Select/StackPush:0\n0gradients/rnn/while/Select_5_grad/Select/f_acc:0\n7gradients/rnn/while/Select_5_grad/zeros_like/RefEnter:0\n8gradients/rnn/while/Select_5_grad/zeros_like/StackPush:0\n4gradients/rnn/while/Select_5_grad/zeros_like/f_acc:0\n3gradients/rnn/while/Select_6_grad/Select/RefEnter:0\n4gradients/rnn/while/Select_6_grad/Select/StackPush:0\n0gradients/rnn/while/Select_6_grad/Select/f_acc:0\n7gradients/rnn/while/Select_6_grad/zeros_like/RefEnter:0\n8gradients/rnn/while/Select_6_grad/zeros_like/StackPush:0\n4gradients/rnn/while/Select_6_grad/zeros_like/f_acc:0\n1gradients/rnn/while/Select_grad/Select/RefEnter:0\n2gradients/rnn/while/Select_grad/Select/StackPush:0\n.gradients/rnn/while/Select_grad/Select/f_acc:0\nYgradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter:0\nZgradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush:0\nVgradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/Shape_1:0\nrgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPush:0\nogradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc:0\nYgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/Shape:0\nrgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPush:0\nogradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc:0\nfgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/Shape:0\npgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPush:0\nmgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc:0\nmgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter:0\nngradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPush:0\njgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/Shape_1:0\ndgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPush:0\nagradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/Shape_1:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter:0\ncgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/StackPush:0\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc:0\ndgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPush:0\nagradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPush:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/Shape_1:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter:0\ncgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/StackPush:0\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/Shape_1:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter:0\ncgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/StackPush:0\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc:0\ndgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPush:0\nagradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc:0\nrgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPush:0\nogradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/Shape_1:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/RefEnter:0\nfgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/StackPush:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/Shape_1:0\nrgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPush:0\nogradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc:0\nYgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/Shape:0\nrgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPush:0\nogradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc:0\nfgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/Shape:0\npgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPush:0\nmgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc:0\nmgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter:0\nngradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPush:0\njgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/Shape_1:0\ndgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPush:0\nagradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/Shape_1:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter:0\ncgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/StackPush:0\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc:0\ndgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPush:0\nagradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPush:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/Shape_1:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter:0\ncgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/StackPush:0\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/Shape_1:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter:0\ncgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/StackPush:0\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc:0\ndgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPush:0\nagradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc:0\nrgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPush:0\nogradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/Shape_1:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/RefEnter:0\nfgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/StackPush:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/Shape_1:0\nrgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/StackPush:0\nogradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc:0\nYgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/Shape:0\nrgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/StackPush:0\nogradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc:0\nfgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/Shape:0\npgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/StackPush:0\nmgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc:0\nmgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter:0\nngradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/StackPush:0\njgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/Shape_1:0\ndgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/StackPush:0\nagradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/Shape_1:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/Shape_1:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter:0\ncgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/StackPush:0\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc:0\ndgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/StackPush:0\nagradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/StackPush:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/Shape_1:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter:0\ncgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/StackPush:0\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc:0\ntgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter:0\nvgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1:0\nugradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush:0\nwgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/StackPush_1:0\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape:0\n]gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/Shape_1:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter:0\ncgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/StackPush:0\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc:0\ndgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/StackPush:0\nagradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc:0\nrgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter:0\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/StackPush:0\nogradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc:0\n[gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/Shape_1:0\negradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/RefEnter:0\nfgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/StackPush:0\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/f_acc:0\n\021rnn/CheckSeqLen:0\n\021rnn/TensorArray:0\n@rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3:0\n\023rnn/TensorArray_1:0\n/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/read:0\n1rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read:0\n3rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/read:0\n3rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/read:0\n3rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/read:0\n/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/read:0\n1rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read:0\n3rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/read:0\n3rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/read:0\n3rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/read:0\n/rnn/multi_rnn_cell/cell_2/lstm_cell/bias/read:0\n1rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/read:0\n3rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/read:0\n3rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/read:0\n3rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/read:0\n\025rnn/strided_slice_1:0\n\021rnn/while/Enter:0\n\023rnn/while/Enter_1:0\n\023rnn/while/Enter_2:0\n\023rnn/while/Enter_3:0\n\023rnn/while/Enter_4:0\n\023rnn/while/Enter_5:0\n\023rnn/while/Enter_6:0\n\023rnn/while/Enter_7:0\n\020rnn/while/Exit:0\n\022rnn/while/Exit_1:0\n\022rnn/while/Exit_2:0\n\022rnn/while/Exit_3:0\n\022rnn/while/Exit_4:0\n\022rnn/while/Exit_5:0\n\022rnn/while/Exit_6:0\n\022rnn/while/Exit_7:0\n\036rnn/while/GreaterEqual/Enter:0\n\030rnn/while/GreaterEqual:0\n\032rnn/while/GreaterEqual_1:0\n\032rnn/while/GreaterEqual_2:0\n\032rnn/while/GreaterEqual_3:0\n\032rnn/while/GreaterEqual_4:0\n\032rnn/while/GreaterEqual_5:0\n\032rnn/while/GreaterEqual_6:0\n\024rnn/while/Identity:0\n\026rnn/while/Identity_1:0\n\026rnn/while/Identity_2:0\n\026rnn/while/Identity_3:0\n\026rnn/while/Identity_4:0\n\026rnn/while/Identity_5:0\n\026rnn/while/Identity_6:0\n\026rnn/while/Identity_7:0\n\026rnn/while/Less/Enter:0\n\020rnn/while/Less:0\n\024rnn/while/LoopCond:0\n\021rnn/while/Merge:0\n\021rnn/while/Merge:1\n\023rnn/while/Merge_1:0\n\023rnn/while/Merge_1:1\n\023rnn/while/Merge_2:0\n\023rnn/while/Merge_2:1\n\023rnn/while/Merge_3:0\n\023rnn/while/Merge_3:1\n\023rnn/while/Merge_4:0\n\023rnn/while/Merge_4:1\n\023rnn/while/Merge_5:0\n\023rnn/while/Merge_5:1\n\023rnn/while/Merge_6:0\n\023rnn/while/Merge_6:1\n\023rnn/while/Merge_7:0\n\023rnn/while/Merge_7:1\n\031rnn/while/NextIteration:0\n\033rnn/while/NextIteration_1:0\n\033rnn/while/NextIteration_2:0\n\033rnn/while/NextIteration_3:0\n\033rnn/while/NextIteration_4:0\n\033rnn/while/NextIteration_5:0\n\033rnn/while/NextIteration_6:0\n\033rnn/while/NextIteration_7:0\n\030rnn/while/Select/Enter:0\n\022rnn/while/Select:0\n\024rnn/while/Select_1:0\n\024rnn/while/Select_2:0\n\024rnn/while/Select_3:0\n\024rnn/while/Select_4:0\n\024rnn/while/Select_5:0\n\024rnn/while/Select_6:0\n\022rnn/while/Switch:0\n\022rnn/while/Switch:1\n\024rnn/while/Switch_1:0\n\024rnn/while/Switch_1:1\n\024rnn/while/Switch_2:0\n\024rnn/while/Switch_2:1\n\024rnn/while/Switch_3:0\n\024rnn/while/Switch_3:1\n\024rnn/while/Switch_4:0\n\024rnn/while/Switch_4:1\n\024rnn/while/Switch_5:0\n\024rnn/while/Switch_5:1\n\024rnn/while/Switch_6:0\n\024rnn/while/Switch_6:1\n\024rnn/while/Switch_7:0\n\024rnn/while/Switch_7:1\n#rnn/while/TensorArrayReadV3/Enter:0\n%rnn/while/TensorArrayReadV3/Enter_1:0\n\035rnn/while/TensorArrayReadV3:0\n5rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter:0\n/rnn/while/TensorArrayWrite/TensorArrayWriteV3:0\n\021rnn/while/add/y:0\n\017rnn/while/add:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Const:0\nHrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid:0\nJrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_1:0\nJrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Sigmoid_2:0\nErnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh:0\nGrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/Tanh_1:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add/y:0\nDrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4:0\nXrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter:0\nRrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd:0\nWrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter:0\nQrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul:0\nVrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat/axis:0\nQrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat:0\nJrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter:0\nDrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1:0\nLrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3:0\nLrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5:0\nPrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split/split_dim:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split:0\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split:1\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split:2\nFrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split:3\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Const:0\nHrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid:0\nJrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_1:0\nJrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Sigmoid_2:0\nErnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh:0\nGrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/Tanh_1:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add/y:0\nDrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4:0\nXrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter:0\nRrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd:0\nWrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter:0\nQrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul:0\nVrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat/axis:0\nQrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat:0\nJrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter:0\nDrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1:0\nLrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3:0\nLrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5:0\nPrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split/split_dim:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split:0\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split:1\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split:2\nFrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split:3\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Const:0\nHrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid:0\nJrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_1:0\nJrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Sigmoid_2:0\nErnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh:0\nGrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/Tanh_1:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add/y:0\nDrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4:0\nXrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter:0\nRrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd:0\nWrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter:0\nQrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul:0\nVrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat/axis:0\nQrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat:0\nJrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter:0\nDrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1:0\nLrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3:0\nLrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5:0\nPrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split/split_dim:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split:0\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split:1\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split:2\nFrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split:3\n\013rnn/zeros:0\022/\n\025rnn/strided_slice_1:0\022\026rnn/while/Less/Enter:0\022o\n4gradients/rnn/while/Select_2_grad/zeros_like/f_acc:0\0227gradients/rnn/while/Select_2_grad/zeros_like/RefEnter:0\022\201\001\n3rnn/multi_rnn_cell/cell_2/lstm_cell/w_f_diag/read:0\022Jrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul/Enter:0\022\213\001\n/rnn/multi_rnn_cell/cell_1/lstm_cell/bias/read:0\022Xrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter:0\022\345\001\nogradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc:0\022rgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter:0\022\305\001\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc:0\022bgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter:0\022J\n\021rnn/TensorArray:0\0225rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter:0\022\203\001\n3rnn/multi_rnn_cell/cell_1/lstm_cell/w_o_diag/read:0\022Lrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4/Enter:0\022\214\001\n1rnn/multi_rnn_cell/cell_2/lstm_cell/kernel/read:0\022Wrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter:0\022\311\001\nagradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc:0\022dgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter:0\022\341\001\nmgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc:0\022pgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter:0\022g\n0gradients/rnn/while/Select_4_grad/Select/f_acc:0\0223gradients/rnn/while/Select_4_grad/Select/RefEnter:0\022\311\001\nagradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc:0\022dgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter:0\022\305\001\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc:0\022bgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter:0\022\345\001\nogradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc:0\022rgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter:0\022\305\001\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc:0\022bgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter:0\022\345\001\nogradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc:0\022rgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter:0\022\345\001\nogradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc:0\022rgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter:0\022\345\001\nogradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc:0\022rgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter:0\022\333\001\njgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc:0\022mgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1:0\022\305\001\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc:0\022bgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1:0\022g\n0gradients/rnn/while/Select_5_grad/Select/f_acc:0\0223gradients/rnn/while/Select_5_grad/Select/RefEnter:0\022g\n0gradients/rnn/while/Select_6_grad/Select/f_acc:0\0223gradients/rnn/while/Select_6_grad/Select/RefEnter:0\022\345\001\nogradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc:0\022rgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter:0\022o\n4gradients/rnn/while/Select_4_grad/zeros_like/f_acc:0\0227gradients/rnn/while/Select_4_grad/zeros_like/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1:0\022g\n0gradients/rnn/while/Select_2_grad/Select/f_acc:0\0223gradients/rnn/while/Select_2_grad/Select/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter_1:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter:0\022\'\n\013rnn/zeros:0\022\030rnn/while/Select/Enter:0\022\345\001\nogradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/f_acc:0\022rgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_grad/BroadcastGradientArgs/RefEnter:0\022\305\001\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc:0\022bgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter:0\022o\n4gradients/rnn/while/Select_1_grad/zeros_like/f_acc:0\0227gradients/rnn/while/Select_1_grad/zeros_like/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1:0\022g\n0gradients/rnn/while/Select_3_grad/Select/f_acc:0\0223gradients/rnn/while/Select_3_grad/Select/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter:0\022\311\001\nagradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc:0\022dgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter:0\022\203\001\n3rnn/multi_rnn_cell/cell_2/lstm_cell/w_i_diag/read:0\022Lrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2/Enter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1:0\022\313\001\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/f_acc:0\022egradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/split_grad/concat/RefEnter:0\022\311\001\nagradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc:0\022dgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter:0\022\313\001\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/f_acc:0\022egradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/split_grad/concat/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1:0\022\201\001\n3rnn/multi_rnn_cell/cell_0/lstm_cell/w_f_diag/read:0\022Jrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul/Enter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter:0\022\214\001\n1rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/read:0\022Wrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1:0\022\345\001\nogradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc:0\022rgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter:0\022\311\001\nagradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc:0\022dgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter:0\022\305\001\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/f_acc:0\022bgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul/RefEnter:0\022\341\001\nmgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc:0\022pgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter:0\022\263\001\nVgradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc:0\022Ygradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter:0\022\311\001\nagradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/f_acc:0\022dgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/mul_1/RefEnter:0\022o\n4gradients/rnn/while/Select_6_grad/zeros_like/f_acc:0\0227gradients/rnn/while/Select_6_grad/zeros_like/RefEnter:0\022\311\001\nagradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/f_acc:0\022dgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_1_grad/mul_1/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter:0\022\213\001\n/rnn/multi_rnn_cell/cell_2/lstm_cell/bias/read:0\022Xrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_3_grad/BroadcastGradientArgs/RefEnter_1:0\0223\n\021rnn/CheckSeqLen:0\022\036rnn/while/GreaterEqual/Enter:0\022:\n\023rnn/TensorArray_1:0\022#rnn/while/TensorArrayReadV3/Enter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter:0\022\341\001\nmgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/f_acc:0\022pgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/ShapeN/RefEnter:0\022\214\001\n1rnn/multi_rnn_cell/cell_0/lstm_cell/kernel/read:0\022Wrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/MatMul/Enter:0\022i\n@rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3:0\022%rnn/while/TensorArrayReadV3/Enter_1:0\022\313\001\nbgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/f_acc:0\022egradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/split_grad/concat/RefEnter:0\022\305\001\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/f_acc:0\022bgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul/RefEnter:0\022\311\001\nagradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc:0\022dgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter:0\022\203\001\n3rnn/multi_rnn_cell/cell_2/lstm_cell/w_o_diag/read:0\022Lrnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4/Enter:0\022\333\001\njgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc:0\022mgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_4_grad/BroadcastGradientArgs/RefEnter:0\022\305\001\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc:0\022bgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter:0\022\213\001\n/rnn/multi_rnn_cell/cell_0/lstm_cell/bias/read:0\022Xrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/BiasAdd/Enter:0\022o\n4gradients/rnn/while/Select_5_grad/zeros_like/f_acc:0\0227gradients/rnn/while/Select_5_grad/zeros_like/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/add_2_grad/BroadcastGradientArgs/RefEnter_1:0\022g\n0gradients/rnn/while/Select_1_grad/Select/f_acc:0\0223gradients/rnn/while/Select_1_grad/Select/RefEnter:0\022\305\001\n_gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/f_acc:0\022bgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4_grad/mul/RefEnter:0\022\203\001\n3rnn/multi_rnn_cell/cell_0/lstm_cell/w_i_diag/read:0\022Lrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_2/Enter:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/add_4_grad/BroadcastGradientArgs/RefEnter:0\022o\n4gradients/rnn/while/Select_3_grad/zeros_like/f_acc:0\0227gradients/rnn/while/Select_3_grad/zeros_like/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/BroadcastGradientArgs/RefEnter_1:0\022\351\001\nqgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc:0\022tgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter:0\022\203\001\n3rnn/multi_rnn_cell/cell_1/lstm_cell/w_i_diag/read:0\022Lrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul_2/Enter:0\022\345\001\nogradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/f_acc:0\022rgradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/lstm_cell/MatMul_grad/MatMul_1/RefEnter:0\022\355\001\nsgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/f_acc_1:0\022vgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_5_grad/BroadcastGradientArgs/RefEnter_1:0\022\311\001\nagradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/f_acc:0\022dgradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/lstm_cell/lstm_cell/mul_3_grad/mul_1/RefEnter:0\022\201\001\n3rnn/multi_rnn_cell/cell_1/lstm_cell/w_f_diag/read:0\022Jrnn/while/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell/mul/Enter:0\022\203\001\n3rnn/multi_rnn_cell/cell_0/lstm_cell/w_o_diag/read:0\022Lrnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/mul_4/Enter:0\022\333\001\njgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/f_acc:0\022mgradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/lstm_cell/lstm_cell/lstm_cell/concat_grad/mod/RefEnter:0\022c\n.gradients/rnn/while/Select_grad/Select/f_acc:0\0221gradients/rnn/while/Select_grad/Select/RefEnter:0R\021rnn/while/Enter:0R\023rnn/while/Enter_1:0R\023rnn/while/Enter_2:0R\023rnn/while/Enter_3:0R\023rnn/while/Enter_4:0R\023rnn/while/Enter_5:0R\023rnn/while/Enter_6:0R\023rnn/while/Enter_7:0R\025gradients/f_count_1:0"
      }
    }
  }
}
